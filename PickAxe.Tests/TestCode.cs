//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using HtmlAgilityPack;
using Pickaxe.Runtime;
using System;
using System.Collections.Generic;
using System.Linq;



public class Code : RuntimeBase
{

    private Scope_313ed64a076645d5b366c4978ff47119 _Scope_313ed64a076645d5b366c4978ff47119;

    private Scope_7248d54d103245f7a4dc813e55e6372c _Scope_7248d54d103245f7a4dc813e55e6372c;

    public Code()
    {
        _Scope_313ed64a076645d5b366c4978ff47119 = new Scope_313ed64a076645d5b366c4978ff47119();
        _Scope_7248d54d103245f7a4dc813e55e6372c = new Scope_7248d54d103245f7a4dc813e55e6372c();
        TotalOperations = (TotalOperations + 1);
    }

    public void Run()
    {
        InitProxies();
        Block_4aa4474f74b34e069a37d9c9446a1f72();
        Step_0f7ba52ca56d4575a8e480d311476e37();
    }

    public void Block_4aa4474f74b34e069a37d9c9446a1f72()
    {
        Step_2170f475eb6041ed93b9ffda83cd235b();
    }

    private CodeTable<anon_eeab4ae81dc2416fbb62bb207fdcc091> From_0b2d2f245afa4ca19ecce3f9296f39df()
    {
        Call(3);
        IEnumerable<anon_eeab4ae81dc2416fbb62bb207fdcc091> join = Fetch_131ce15363dd4d48a8ee6d08b6e3e97a();
        CodeTable<anon_eeab4ae81dc2416fbb62bb207fdcc091> newTable = new CodeTable<anon_eeab4ae81dc2416fbb62bb207fdcc091>();
        newTable.SetRows(join.ToList());
        return newTable;
    }

    private Table<Expand> Expand_0d9a5efcdc554d368662d80cb8e9f41b()
    {
        Table<Expand> expandTable = new RuntimeTable<Expand>();
        int x;
        for (x = 0; (x <= 10); x = (x + 1))
        {
            Expand expand = new Expand();
            expand.value = (1
                        + (x * 10));
            expandTable.Add(expand);
        }
        return expandTable;
    }

    private IEnumerable<anon_eeab4ae81dc2416fbb62bb207fdcc091> Fetch_131ce15363dd4d48a8ee6d08b6e3e97a()
    {
        Table<Expand> table = Expand_0d9a5efcdc554d368662d80cb8e9f41b();
        return table.Select(o =>
        {
            return Copy_8d85e759ba47429885f70fcf89c42fc2(o);
        });
    }

    private anon_eeab4ae81dc2416fbb62bb207fdcc091 Copy_8d85e759ba47429885f70fcf89c42fc2(Expand o)
    {
        anon_eeab4ae81dc2416fbb62bb207fdcc091 t = new anon_eeab4ae81dc2416fbb62bb207fdcc091();
        t.Expand = o;
        return t;
    }

    private Table<ResultRow> Select_29478d77d5354f91b0e1a3cb82ce0312()
    {
        Call(2);
        RuntimeTable<ResultRow> result = new RuntimeTable<ResultRow>();
        CodeTable<anon_eeab4ae81dc2416fbb62bb207fdcc091> fromTable = From_0b2d2f245afa4ca19ecce3f9296f39df();
        IEnumerator<anon_eeab4ae81dc2416fbb62bb207fdcc091> x = fromTable.GetEnumerator();
        for (
        ; x.MoveNext();
        )
        {
            anon_eeab4ae81dc2416fbb62bb207fdcc091 row = x.Current;
            ResultRow resultRow = new ResultRow(0);
        }
        OnSelect(result);
        return result;
    }

    public void Step_2170f475eb6041ed93b9ffda83cd235b()
    {
        Select_29478d77d5354f91b0e1a3cb82ce0312();
        OnProgress();
    }

    public void Step_0f7ba52ca56d4575a8e480d311476e37()
    {
        OnProgress(new ProgressArgs(TotalOperations, TotalOperations));
    }

    private class Scope_313ed64a076645d5b366c4978ff47119
    {

        public int g_identity;

        public Scope_313ed64a076645d5b366c4978ff47119()
        {
        }
    }

    private class Scope_7248d54d103245f7a4dc813e55e6372c
    {

        public Scope_7248d54d103245f7a4dc813e55e6372c()
        {
        }
    }

    private class anon_eeab4ae81dc2416fbb62bb207fdcc091 : IRow
    {

        public Expand Expand;
    }
}
